[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/docs",
  "/notebooks"
]

[project]
name = "rasterix"
description = "Raster extensions for Xarray"
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.10"
keywords = ["xarray"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "affine",
    "pandas>=2",
    "numpy>=2",
    "xarray>=2025",
]
dynamic=["version"]
[project.optional-dependencies]
dask = ["dask-geopandas"]
rasterize = [
    "odc-geo",
    "rasterio",
    "rioxarray",
]
exactextract = ["exactextract"]
test = [
  "geodatasets",
  "dask-geopandas",
  "odc-geo",
  "rasterio",
  "rioxarray",
  "exactextract",
  "netCDF4"
]

[tool.hatch]
version.source = "vcs"

[tool.hatch.build]
hooks.vcs.version-file = "src/rasterix/_version.py"

[tool.ruff]
line-length = 110
target-version = "py310"
builtins = ["ellipsis"]
exclude = [
    ".eggs",
    "doc",
]

[tool.hatch.envs.test]
dependencies = [
    "coverage",
    "pytest",
    "pytest-cov",
]
features = ["test"]

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.13"]

[tool.hatch.envs.test.scripts]
run-coverage = "pytest --cov-config=pyproject.toml --cov=pkg --cov-report xml --cov=src --junitxml=junit.xml -o junit_family=legacy"
run-coverage-html = "pytest --cov-config=pyproject.toml --cov=pkg --cov-report html --cov=src"
run-pytest = "run-coverage --no-cov"
run-verbose = "run-coverage --verbose"
run-mypy = "mypy src"
list-env = "pip list"

[tool.ruff.lint]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
    "E402",
    "E501",
    "E731",
]
select = [
    # Bugbear
    # "B",
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Pyupgrade
    "UP",
]

[tool.ruff.lint.isort]
known-first-party = ["rasterix"]
known-third-party = [
    "xarray"
]

[tool.ruff.format]
# Enable reformatting of code snippets in docstrings.
docstring-code-format = true

[tool.pytest.ini_options]
addopts = "--tb=short"
minversion = "7"
testpaths = ["tests"]

[tool.codespell]
ignore-words-list = "nd,nax,coo"
skip = "*.html"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
namespace_packages = false
